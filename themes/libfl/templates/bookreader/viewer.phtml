<?php
    $this->doctype(Zend\View\Helper\Doctype::XHTML1_RDFA);
    $this->headLink()->appendStylesheet('mmenu/jquery.mmenu.css');
    $this->headLink()->appendStylesheet('mmenu/jquery.mmenu.navbars.css');
    $this->headLink()->appendStylesheet('bookreader/BookReader.css');
    $this->headLink()->appendStylesheet('bookreader/BookReader-ia.css');
    //$this->headLink()->appendStylesheet('bookreader/BookReaderEmbed.css');

    $this->headScript()->appendFile('bookreader/jquery-1.10.2.min.js');
    $this->headScript()->appendFile('bookreader/jquery-ui-1.12.0.min.js');
    $this->headScript()->appendFile('bookreader/jquery.browser.min.js');
    $this->headScript()->appendFile('bookreader/dragscrollable-br.js');
    $this->headScript()->appendFile('bookreader/jquery.colorbox-min.js');
    $this->headScript()->appendFile('bookreader/jquery.bt.min.js');
    $this->headScript()->appendFile('mmenu/jquery.mmenu.min.js');
    $this->headScript()->appendFile('mmenu/jquery.mmenu.navbars.min.js');
    //$this->headScript()->appendFile('bookreader/excanvas.compiled.js');
    $this->headScript()->appendFile('bookreader/BookReader-common.js');
    $this->headScript()->appendFile('bookreader/BookReader.js');
    //$this->headScript()->appendFile('bookreader/jquery.ui.touch-punch.min.js
?>
<!--<div id="BookReader" style="height: 600px; overflow: hidden;">
    Библиотека иностранной литературы<br/>
    <noscript>
    <p>
        The BookReader requires JavaScript to be enabled. Please check that your browser supports JavaScript and that it is enabled in the browser settings.  You can also try one of the <a href="http://www.archive.org/details/goodytwoshoes00newyiala"> other formats of the book</a>.
    </p>
    </noscript>
</div>-->

<?php
    ini_set("soap.wsdl_cache_enabled", "0");
    $client = new SoapClient("http://opac.libfl.ru/LIBFLDataProviderAPI/service.asmx?WSDL");
    $bookID = filter_input(INPUT_GET, 'bookID');
    try {
        $getBookInfo = $client->GetBookInfoByID(array('id'=>$bookID));
    } catch (Exception $e) {
        echo $e->getMessage()."<br/><br/>";
    }
    $bookInfo = json_decode($getBookInfo->GetBookInfoByIDResult);
    //if (!empty($bookInfo->Title))
        $this->headMeta()->setProperty('og:title', $bookInfo->Title);
    //if (!empty($bookInfo->Annotation))
        $this->headMeta()->setProperty('og:description', 'Библиотека иностранной литературы');

?>

<div id="IABookReaderWrapper">
    <div id="IABookReaderMessageWrapper" style="display: none;"></div>
    <div id="BookReader" class="ui-full mm-page mm-slideout">
        <h2>Библиотека иностранной литературы</h2>
        <noscript>
            <p>
                <?php echo $bookInfo->Title ?>
            </p>
        </noscript>
    </div>
</div>

<!-- Disable mouse buttons -->
<script type="text/javascript">
    /*function clickIE() {
        if (document.all) {
            return false;
        }
    }
    function clickNS(e) {
        if (document.layers || (document.getElementById && !document.all)) {
            if (e.which == 2 || e.which == 3) {
                return false;
            }
        }
    }
    if (document.layers) {
        document.captureEvents(Event.MOUSEDOWN);
        document.onmousedown = clickNS;
    } else {
        document.onmouseup = clickNS;
        document.oncontextmenu = clickIE;
    }
    document.oncontextmenu = new Function("return false");*/
</script>
<!-- //Disable mouse buttons -->

<script>
    /**
     * We achieve a flexbox-like sizing with JS to maximize browser support
     */
    function throttle(fn, threshhold, scope) {
        threshhold || (threshhold = 250);
        var last,
            deferTimer;
        return function () {
            var context = scope || this;
            var now = +new Date,
                args = arguments;
            if (last && now < last + threshhold) {
                // hold on to it
                clearTimeout(deferTimer);
                    deferTimer = setTimeout(function () {
                    last = now;
                    fn.apply(context, args);
                }, threshhold);
            } else {
                last = now;
                fn.apply(context, args);
            }
        };
    }
</script>
<script>
    // Set some config variables -- $$$ NB: Config object format has not been finalized
    var bookInfo = <?php echo $getBookInfo->GetBookInfoByIDResult ?>;
    var exemplar = [];
    $.each(bookInfo.Exemplars, function(i, data) {
        if (data.IsElectronicCopy) {
            exemplar = data;
        }
    });
    console.log(exemplar);
    var imgWidth = exemplar.WidthFirstFile;
    var imgHeight = exemplar.HeightFirstFile;
    var brConfig = {
        theme:"ia",
        mode: (imgWidth > imgHeight) ? 1 : 2,
    };
</script>
<script type="text/javascript">
    br = new BookReader();
    br.getPageWidth = function(index) {
        return exemplar.WidthFirstFile;
    };
    br.getPageHeight = function(index) {
        return exemplar.HeightFirstFile;
    };
    br.getBookFund = function () {
        return window.location.search.replace( '?', '').split('=')[1].split('_')[0];
    };
    br.getBookPIN = function () {
        return window.location.search.replace( '?', '').split('=')[1].split('_')[1];
    };
    br.getPageURI = function(index, reduce, rotate) {
        //var leafStr = '0000';
        var imgStr = (index+1).toString();
        //var re = new RegExp("0{"+imgStr.length+"}$");
        var viewMode = window.location.search.replace('?','').split('&')[1].split('=')[1];
        if (viewMode == 'HQ') {
            var bookPath = exemplar.Path+exemplar.JPGFiles[imgStr];
        } else {
            var bookPath = exemplar.Path+exemplar.JPGFiles[imgStr];
        }
        var url = 'https://cdn.libfl.ru:6684/books/'+bookPath;
        return url;
    };

    br.getPageSide = function(index) {
        if (0 == (index & 0x1)) {
            return 'R';
        } else {
            return 'L';
        }
    };
    br.getSpreadIndices = function (pindex) {
        var spreadIndices = [null, null];
        if ('rl' == this.pageProgression) {
            if (this.getPageSide(pindex) == 'R') {
                spreadIndices[1] = pindex;
                spreadIndices[0] = pindex + 1;
            } else {
                spreadIndices[0] = pindex;
                spreadIndices[1] = pindex - 1;
            }
        } else {
            if (this.getPageSide(pindex) == 'L') {
                spreadIndices[0] = pindex;
                spreadIndices[1] = pindex + 1;
            } else {
                spreadIndices[1] = pindex;
                spreadIndices[0] = pindex - 1;
            }
        }
        return spreadIndices;
    };
    br.getPageNum = function (index) {
        return index + 1;
    };
    br.numLeafs = exemplar.CountJPG;
    br.bookTitle = bookInfo.Title;
    br.bookUrl = '//'+location.host+'/Record/'+window.location.search.replace( '?', '').split('=')[1].split('&')[0];
    br.bookUrlText = 'Вернуться к описанию издания';
    br.bookUrlTitle = 'Back to details on book';
    var img = new Image();
    img.src = 'https://cdn.libfl.ru:6684/covers/'+br.getBookFund()+'/'+br.getBookPIN()+'/cover.jpg';
    if (img.onload == function() {return true}) {
        br.thumbnail = 'https://cdn.libfl.ru:6684/covers/'+br.getBookFund()+'/'+br.getBookPIN()+'/cover.jpg';
    } else {
        br.thumbnail = 'https://cdn.libfl.ru:6684/images/no_cover.png';
    }
    br.metadata = [
        {label: 'Название книги', value: bookInfo.Title},
        {label: 'Автор', value: bookInfo.Author},
        {label: 'Краткое описание', value: bookInfo.Annotation},
    ];
    br.enableMobileNav = true;
    br.mobileNavTitle = 'Settings';
    br.imagesBaseURL = '/themes/libfl/images/bookreader/';
    br.getEmbedCode = function (frameWidth, frameHeight, viewParams) {
        return "Embed code not supported in bookreader.";
    };
    br.ui = 'full'; // embed, full (responsive)
    br.init();
    $('#BRtoolbar').find('.read').hide();
    $('.BRtoolbarSectionSearch').hide();
    // $('#btnSrch').hide();
</script>
